"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=List;var _jsxRuntime=require("react/jsx-runtime"),React=_interopRequireWildcard(require("react"));function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var a=new WeakMap;return _getRequireWildcardCache=function(){return a},a}function _interopRequireWildcard(a){if(a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var b=_getRequireWildcardCache();if(b&&b.has(a))return b.get(a);var c={},d=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in a)if(Object.prototype.hasOwnProperty.call(a,e)){var f=d?Object.getOwnPropertyDescriptor(a,e):null;f&&(f.get||f.set)?Object.defineProperty(c,e,f):c[e]=a[e]}return c.default=a,b&&b.set(a,c),c}/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 */function ListItem({item:a,removeItem:b,toggleItem:c}){const d=(0,React.useCallback)(()=>{b(a)},[a,b]),e=(0,React.useCallback)(()=>{c(a)},[a,c]);return/*#__PURE__*/(0,_jsxRuntime.jsxs)("li",{children:[/*#__PURE__*/(0,_jsxRuntime.jsx)("button",{onClick:d,children:"Delete"}),/*#__PURE__*/(0,_jsxRuntime.jsxs)("label",{children:[/*#__PURE__*/(0,_jsxRuntime.jsx)("input",{checked:a.isComplete,onChange:e,type:"checkbox"})," ",a.text]})]})}function List(){const[a,b]=(0,React.useState)(""),[c,d]=(0,React.useState)([{id:1,isComplete:!0,text:"First"},{id:2,isComplete:!0,text:"Second"},{id:3,isComplete:!1,text:"Third"}]),[e,f]=(0,React.useState)(4),g=(0,React.useCallback)(()=>{""!==a&&(d([...c,{id:e,isComplete:!1,text:a}]),f(e+1),b(""))},[a,c,e]),h=(0,React.useCallback)(a=>{"Enter"===a.key&&g()},[g]),i=(0,React.useCallback)(a=>{b(a.currentTarget.value)},[b]),j=(0,React.useCallback)(a=>d(c.filter(b=>b!==a)),[c]),k=(0,React.useCallback)(a=>{// Dont use indexOf()
// because editing props in DevTools creates a new Object.
const b=c.findIndex(b=>b.id===a.id);d(c.slice(0,b).concat({...a,isComplete:!a.isComplete}).concat(c.slice(b+1)))},[c]);return/*#__PURE__*/(0,_jsxRuntime.jsxs)(React.Fragment,{children:[/*#__PURE__*/(0,_jsxRuntime.jsx)("h1",{children:"List"}),/*#__PURE__*/(0,_jsxRuntime.jsx)("input",{type:"text",placeholder:"New list item...",value:a,onChange:i,onKeyPress:h}),/*#__PURE__*/(0,_jsxRuntime.jsx)("button",{disabled:""===a,onClick:g,children:/*#__PURE__*/(0,_jsxRuntime.jsx)("span",{role:"img","aria-label":"Add item",children:"Add"})}),/*#__PURE__*/(0,_jsxRuntime.jsx)("ul",{children:c.map(a=>/*#__PURE__*/(0,_jsxRuntime.jsx)(ListItem,{item:a,removeItem:j,toggleItem:k},a.id))})]})}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRvRG9MaXN0LmpzIl0sIm5hbWVzIjpbIkxpc3RJdGVtIiwiaXRlbSIsInJlbW92ZUl0ZW0iLCJ0b2dnbGVJdGVtIiwiaGFuZGxlRGVsZXRlIiwiaGFuZGxlVG9nZ2xlIiwiaXNDb21wbGV0ZSIsInRleHQiLCJMaXN0IiwibmV3SXRlbVRleHQiLCJzZXROZXdJdGVtVGV4dCIsIml0ZW1zIiwic2V0SXRlbXMiLCJpZCIsInVpZCIsInNldFVJRCIsImhhbmRsZUNsaWNrIiwiaGFuZGxlS2V5UHJlc3MiLCJldmVudCIsImtleSIsImhhbmRsZUNoYW5nZSIsImN1cnJlbnRUYXJnZXQiLCJ2YWx1ZSIsIml0ZW1Ub1JlbW92ZSIsImZpbHRlciIsIml0ZW1Ub1RvZ2dsZSIsImluZGV4IiwiZmluZEluZGV4Iiwic2xpY2UiLCJjb25jYXQiLCJtYXAiXSwibWFwcGluZ3MiOiJreUJBQUE7Ozs7Ozs7R0FZQSxRQUFTQSxDQUFBQSxRQUFULENBQWtCLENBQUNDLElBQUksQ0FBSkEsQ0FBRCxDQUFPQyxVQUFVLENBQVZBLENBQVAsQ0FBbUJDLFVBQVUsQ0FBVkEsQ0FBbkIsQ0FBbEIsQ0FBa0QsTUFDMUNDLENBQUFBLENBQVksQ0FBRyxzQkFBWSxJQUFNLENBQ3JDRixDQUFVLENBQUNELENBQUQsQ0FDWCxDQUZvQixDQUVsQixDQUFDQSxDQUFELENBQU9DLENBQVAsQ0FGa0IsQ0FEMkIsQ0FLMUNHLENBQVksQ0FBRyxzQkFBWSxJQUFNLENBQ3JDRixDQUFVLENBQUNGLENBQUQsQ0FDWCxDQUZvQixDQUVsQixDQUFDQSxDQUFELENBQU9FLENBQVAsQ0FGa0IsQ0FMMkIsQ0FTaEQsbUJBQ0Usa0RBQ0UsOEJBQVEsT0FBTyxDQUFFQyxDQUFqQixvQkFERixjQUVFLHFEQUNFLDZCQUNFLE9BQU8sQ0FBRUgsQ0FBSSxDQUFDSyxVQURoQixDQUVFLFFBQVEsQ0FBRUQsQ0FGWixDQUdFLElBQUksQ0FBQyxVQUhQLEVBREYsQ0FLSyxHQUxMLENBTUdKLENBQUksQ0FBQ00sSUFOUixH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QUFDLFFBQUQsRUFFRSxJQUFJLENBQUVBLENBRlIsQ0FHRSxVQUFVLENBQUVDLENBSGQsQ0FJRSxVQUFVLENBQUVDLENBSmQsRUFDT0YsQ0FBSSxDQUFDWSxFQURaLENBREQsQ0FESCxFQWRGLEdBMEJIIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICovXG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7RnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VTdGF0ZX0gZnJvbSAncmVhY3QnO1xuXG5mdW5jdGlvbiBMaXN0SXRlbSh7aXRlbSwgcmVtb3ZlSXRlbSwgdG9nZ2xlSXRlbX0pIHtcbiAgY29uc3QgaGFuZGxlRGVsZXRlID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHJlbW92ZUl0ZW0oaXRlbSk7XG4gIH0sIFtpdGVtLCByZW1vdmVJdGVtXSk7XG5cbiAgY29uc3QgaGFuZGxlVG9nZ2xlID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHRvZ2dsZUl0ZW0oaXRlbSk7XG4gIH0sIFtpdGVtLCB0b2dnbGVJdGVtXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8bGk+XG4gICAgICA8YnV0dG9uIG9uQ2xpY2s9e2hhbmRsZURlbGV0ZX0+RGVsZXRlPC9idXR0b24+XG4gICAgICA8bGFiZWw+XG4gICAgICAgIDxpbnB1dFxuICAgICAgICAgIGNoZWNrZWQ9e2l0ZW0uaXNDb21wbGV0ZX1cbiAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlVG9nZ2xlfVxuICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgIC8+eycgJ31cbiAgICAgICAge2l0ZW0udGV4dH1cbiAgICAgIDwvbGFiZWw+XG4gICAgPC9saT5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTGlzdChwcm9wcykge1xuICBjb25zdCBbbmV3SXRlbVRleHQsIHNldE5ld0l0ZW1UZXh0XSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3QgW2l0ZW1zLCBzZXRJdGVtc10gPSB1c2VTdGF0ZShbXG4gICAge2lkOiAxLCBpc0NvbXBsZXRlOiB0cnVlLCB0ZXh0OiAnRmlyc3QnfSxcbiAgICB7aWQ6IDIsIGlzQ29tcGxldGU6IHRydWUsIHRleHQ6ICdTZWNvbmQnfSxcbiAgICB7aWQ6IDMsIGlzQ29tcGxldGU6IGZhbHNlLCB0ZXh0OiAnVGhpcmQnfSxcbiAgXSk7XG4gIGNvbnN0IFt1aWQsIHNldFVJRF0gPSB1c2VTdGF0ZSg0KTtcblxuICBjb25zdCBoYW5kbGVDbGljayA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAobmV3SXRlbVRleHQgIT09ICcnKSB7XG4gICAgICBzZXRJdGVtcyhbXG4gICAgICAgIC4uLml0ZW1zLFxuICAgICAgICB7XG4gICAgICAgICAgaWQ6IHVpZCxcbiAgICAgICAgICBpc0NvbXBsZXRlOiBmYWxzZSxcbiAgICAgICAgICB0ZXh0OiBuZXdJdGVtVGV4dCxcbiAgICAgICAgfSxcbiAgICAgIF0pO1xuICAgICAgc2V0VUlEKHVpZCArIDEpO1xuICAgICAgc2V0TmV3SXRlbVRleHQoJycpO1xuICAgIH1cbiAgfSwgW25ld0l0ZW1UZXh0LCBpdGVtcywgdWlkXSk7XG5cbiAgY29uc3QgaGFuZGxlS2V5UHJlc3MgPSB1c2VDYWxsYmFjayhcbiAgICBldmVudCA9PiB7XG4gICAgICBpZiAoZXZlbnQua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICAgIGhhbmRsZUNsaWNrKCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBbaGFuZGxlQ2xpY2tdLFxuICApO1xuXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IHVzZUNhbGxiYWNrKFxuICAgIGV2ZW50ID0+IHtcbiAgICAgIHNldE5ld0l0ZW1UZXh0KGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWUpO1xuICAgIH0sXG4gICAgW3NldE5ld0l0ZW1UZXh0XSxcbiAgKTtcblxuICBjb25zdCByZW1vdmVJdGVtID0gdXNlQ2FsbGJhY2soXG4gICAgaXRlbVRvUmVtb3ZlID0+IHNldEl0ZW1zKGl0ZW1zLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09IGl0ZW1Ub1JlbW92ZSkpLFxuICAgIFtpdGVtc10sXG4gICk7XG5cbiAgY29uc3QgdG9nZ2xlSXRlbSA9IHVzZUNhbGxiYWNrKFxuICAgIGl0ZW1Ub1RvZ2dsZSA9PiB7XG4gICAgICAvLyBEb250IHVzZSBpbmRleE9mKClcbiAgICAgIC8vIGJlY2F1c2UgZWRpdGluZyBwcm9wcyBpbiBEZXZUb29scyBjcmVhdGVzIGEgbmV3IE9iamVjdC5cbiAgICAgIGNvbnN0IGluZGV4ID0gaXRlbXMuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5pZCA9PT0gaXRlbVRvVG9nZ2xlLmlkKTtcblxuICAgICAgc2V0SXRlbXMoXG4gICAgICAgIGl0ZW1zXG4gICAgICAgICAgLnNsaWNlKDAsIGluZGV4KVxuICAgICAgICAgIC5jb25jYXQoe1xuICAgICAgICAgICAgLi4uaXRlbVRvVG9nZ2xlLFxuICAgICAgICAgICAgaXNDb21wbGV0ZTogIWl0ZW1Ub1RvZ2dsZS5pc0NvbXBsZXRlLFxuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNvbmNhdChpdGVtcy5zbGljZShpbmRleCArIDEpKSxcbiAgICAgICk7XG4gICAgfSxcbiAgICBbaXRlbXNdLFxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPGgxPkxpc3Q8L2gxPlxuICAgICAgPGlucHV0XG4gICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJOZXcgbGlzdCBpdGVtLi4uXCJcbiAgICAgICAgdmFsdWU9e25ld0l0ZW1UZXh0fVxuICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICBvbktleVByZXNzPXtoYW5kbGVLZXlQcmVzc31cbiAgICAgIC8+XG4gICAgICA8YnV0dG9uIGRpc2FibGVkPXtuZXdJdGVtVGV4dCA9PT0gJyd9IG9uQ2xpY2s9e2hhbmRsZUNsaWNrfT5cbiAgICAgICAgPHNwYW4gcm9sZT1cImltZ1wiIGFyaWEtbGFiZWw9XCJBZGQgaXRlbVwiPlxuICAgICAgICAgIEFkZFxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDx1bD5cbiAgICAgICAge2l0ZW1zLm1hcChpdGVtID0+IChcbiAgICAgICAgICA8TGlzdEl0ZW1cbiAgICAgICAgICAgIGtleT17aXRlbS5pZH1cbiAgICAgICAgICAgIGl0ZW09e2l0ZW19XG4gICAgICAgICAgICByZW1vdmVJdGVtPXtyZW1vdmVJdGVtfVxuICAgICAgICAgICAgdG9nZ2xlSXRlbT17dG9nZ2xlSXRlbX1cbiAgICAgICAgICAvPlxuICAgICAgICApKX1cbiAgICAgIDwvdWw+XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn1cbiJdfQ==
//# sourceURL=ToDoList.js