name: build_and_test

on:
  workflow_dispatch:
  pull_request:
  push:

jobs:
  yarn_flags:
    runs-on: ubuntu-latest
    container:
      image: cimg/node:18.20.1-browsers
    env:
      TZ: /usr/share/zoneinfo/America/Los_Angeles
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_node_modules
      - run: yarn flags
  yarn_flow:
    runs-on: ubuntu-latest
    container:
      image: cimg/node:18.20.1-browsers
    env:
      TZ: /usr/share/zoneinfo/America/Los_Angeles
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_node_modules
      - run: node ./scripts/tasks/flow-ci
  check_generated_fizz_runtime:
    runs-on: ubuntu-latest
    container:
      image: cimg/node:18.20.1-browsers
    env:
      TZ: /usr/share/zoneinfo/America/Los_Angeles
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_node_modules
      - run: |
            yarn generate-inline-fizz-runtime
            git diff --quiet || (echo "There was a change to the Fizz runtime. Run `yarn generate-inline-fizz-runtime` and check in the result." && false)
  yarn_lint:
    runs-on: ubuntu-latest
    container:
      image: cimg/node:18.20.1-browsers
    env:
      TZ: /usr/share/zoneinfo/America/Los_Angeles
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_node_modules
      - run: node ./scripts/prettier/index
      - run: node ./scripts/tasks/eslint
      - run: ./scripts/circleci/check_license.sh
      - run: ./scripts/circleci/test_print_warnings.sh
  yarn_test:
    runs-on: ubuntu-latest
    container:
      image: cimg/node:18.20.1-browsers
    env:
      TZ: /usr/share/zoneinfo/America/Los_Angeles
    strategy:
      matrix:
        args:
          # Intentionally passing these as strings instead of creating a
          # separate parameter per CLI argument, since it's easier to
          # control/see which combinations we want to run.
          - "-r=stable --env=development"
          - "-r=stable --env=production"
          - "-r=experimental --env=development"
          - "-r=experimental --env=production"
          - "-r=www-classic --env=development --variant=false"
          - "-r=www-classic --env=production --variant=false"
          - "-r=www-classic --env=development --variant=true"
          - "-r=www-classic --env=production --variant=true"
          - "-r=www-modern --env=development --variant=false"
          - "-r=www-modern --env=production --variant=false"
          - "-r=www-modern --env=development --variant=true"
          - "-r=www-modern --env=production --variant=true"
          - "-r=xplat --env=development --variant=false"
          - "-r=xplat --env=development --variant=true"
          - "-r=xplat --env=production --variant=false"
          - "-r=xplat --env=production --variant=true"

          # TODO: Test more persistent configurations?
          - '-r=stable --env=development --persistent'
          - '-r=experimental --env=development --persistent'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_node_modules
      - run: yarn test ${{ matrix.args }} --ci
  yarn_build:
    runs-on: ubuntu-latest
    container:
      image: cimg/node:18.20.1-browsers
    env:
      TZ: /usr/share/zoneinfo/America/Los_Angeles
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_node_modules
      # - run: yarn build
      - run: |
          mkdir -p build
          echo 'Hello World!' > build/hello.txt
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
  scrape_warning_messages:
    runs-on: ubuntu-latest
    container:
      image: cimg/node:18.20.1-browsers
    env:
      TZ: /usr/share/zoneinfo/America/Los_Angeles
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_node_modules
      - run: |
            mkdir -p ./build/__test_utils__
            node ./scripts/print-warnings/print-warnings.js > build/__test_utils__/ReactAllWarnings.js
      - uses: actions/upload-artifact@v4
        with:
          name: warning_messages
          path: build
  yarn_check_release_dependencies:
    runs-on: ubuntu-latest
    container:
      image: cimg/node:18.20.1-browsers
    env:
      TZ: /usr/share/zoneinfo/America/Los_Angeles
    needs:
      - yarn_build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: build
          merge-multiple: true
      - uses: ./.github/actions/setup_node_modules
      - run: yarn check-release-dependencies

